[CM_REPL]
log_level:DEBUG
cm_version:10

hdfs_service : hdfs
hive_service : hive


# if hive_autocreate is True, then table replication schedule will be
# created automatically if they don't exist. 
# In order for this to happen, a special Hive replication schedule
# needs to be manually created first.  This schedule will be used as
# the template for all the table replications under that DB that will
# be created.  The table specification for this schedule must be the
# value used for db_template_name
hive_autocreate : True
db_template_name : __template__

# if hdfs_autocreate is True, then a path replication schedule will be
# created automatically if it doesn't exist. 
# currently there is no template and the default values are hardcoded.
# this feature has been disabled
#hdfs_autocreate : False

# These two determine the max amount of time to wait for the replication to end.
# After max_polling_retries  * status_poll_delay seconds, the polling process will end and return -1
# the replication will continue
max_polling_retries : 1000
status_poll_delay : 5

#
# the CM login that has access to the BDR capabilities
# A CM account should be created with the "BDR Administrator" role
cm_user : BDR_role_user
cm_passwd : passwd
cm_primary : cm.foo.com
cm_drsite  : cm.bar.com
cm_port  :  7183

# The peer is the identity of the primary cluster that will be the source of replications
# get the Peer from DR CM Administration->Peers
cm_peername: PEER

# to get cluster name, put something like this in your browser https://FQDN:7183/api/v11/clusters
cluster_name : cluster

# the protocol, host and port for HTTPFS running on the production cluster
httpfs_host : httpfs.foo.com
httpfs_port : 14000
# http or https
httpfs_proto: http

# the protocol, host and port for webhcat running on the production cluster
webhcat_host : webhcat.foo.com
webhcat_port : 50111
# http or https 
webhcat_proto: http


